
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#../environments/environments.yaml                       +
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

format_version: 2
#=========================================================
# Common environment variables
#=========================================================
common:
  default_region: &region
    REGION: 'ap-southeast-2'
  docker_repo: &docker_repo
    DOCKER_REPO: 'docker-env.artifacts.tabdigital.com.au'
  default_environment_variables: &default_environment_variables
    <<: *docker_repo
    <<: *region

#=========================================================
#  GoCD Environment definitions
#=========================================================
environments:
  uat-yarra:  &uat-yarra #  UAT Yarra
    environment_variables:
      <<: *default_environment_variables
      ENVIRONMENT: 'UAT-Yarra'
      AWS_PROFILE: 'test'
#=========================================================
  uat-murray: &uat-murray  # UAT Murray
    # environment_variables:
      <<: *default_environment_variables
      ENVIRONMENT: 'UAT-Murray'
      AWS_PROFILE: 'test'
#=========================================================
  preproduction: &preproduction #  PreProduction
    # environment_variables:
      <<: *default_environment_variables
      ENVIRONMENT: 'PreProduction'
      AWS_PROFILE: 'test'
#=========================================================
  production:
    # environment_variables:
      <<: *default_environment_variables
      ENVIRONMENT: 'Production'
      AWS_PROFILE: 'test'
#=========================================================
  tools:
    # environment_variables:
      <<: *default_environment_variables
      ENVIRONMENT: 'Tools'
      AWS_PROFILE: 'test'
#=========================================================
  productiondr:
    # environment_variables:
      <<: *docker_repo
      REGION: 'ap-northeast-1'
      ENVIRONMENT: 'ProductionDR'
      AWS_PROFILE: 'test'
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#../pipeline/service-multiplier/production.yml                       +
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# service-multiplier-yarra.yml
pipe1:
  group: group1
  environment_variables:
    DEPLOYMENT: testing
    FOO: bar
    << : *production
  materials:
    Deployment:
     git: git@github.tabcorp.com.au:TabDigital/deployment.git
    service-multiplier:
     git: git@github.tabcorp.com.au:TabDigital/deployment-trigger.git 
  template: test-template1
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#../pipeline/service-multiplier/uat-murray.yml                       +
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# service-multiplier-yarra.yml
pipe2:
  group: group1
  environment_variables:
    DEPLOYMENT: testing
    FOO: bar
    << : *uat-murray
  materials:
    Deployment:
     git: git@github.tabcorp.com.au:TabDigital/deployment.git
    service-multiplier:
     git: git@github.tabcorp.com.au:TabDigital/deployment-trigger.git 
  template: test-template1
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#../pipeline/service-multiplier/uat-yarra.yml                       +
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# service-multiplier-yarra.yml
pipe3:
  group: group1
  environment_variables:
    DEPLOYMENT: testing
    FOO: bar
    << : *uat-yarra
  materials:
    Deployment:
     git: git@github.tabcorp.com.au:TabDigital/deployment.git
    service-multiplier:
     git: git@github.tabcorp.com.au:TabDigital/deployment-trigger.git 
  template: test-template1
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#../pipeline/Web-Build/web-build.yaml                       +
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# rich.gocd.yaml
pipelines: # tells plugin that here are pipelines by name
  Web-Build-New:
    group: Web
    materials:
      mygit: # this is the name of material
        # says about type of material and url at once
        git: https://github.com/harshadnarvekar/myapp1.git
        branch: ci
      # upstream:
      #   # type is optional here, material type is implied based on pipeline and stage fields
      #   # type: dependency
      #   # pipeline: pipe2
    stages:
      - build: # name of stage
          clean_workspace: true
          approval:
            type: manual
          jobs:
            csharp: # name of the job
              run_instances: 3
              resources:
               - net45
              artifacts:
               - build:
                   source: bin/
                   destination: build
              environment_variables:
                MONO_PATH: /usr/bin/local/mono
              secure_variables:
                PASSWORD: 
              properties:
                perf:
                  source: test.xml
                  xpath: "substring-before(//report/data/all/coverage[starts-with(@type,\u0027class\u0027)]/@value, \u0027%\u0027)"
              tasks:
               - exec: # indicates type of task
                   command: make
                   arguments:
                    - "VERBOSE=true"
              # shorthand for script-executor plugin
               # - script: ./build.sh c
      - BuildArchive: # name of stage
          clean_workspace: true
          environment_variables:
            REGION: "ap-southeast-2"
            PROFILE: "test" 
            ARCHIVE_BUCKET: "test-tabcorp-web-archive"                        
          jobs:
            Archive: # name of the job
              resources:
               -  # resource 
              artifacts:
               - build:
                   source: target/*.tar.gz
                   destination: artifacts
               - build:
                   source: target/RELEASE.txt
                   destination: artifacts
               - build:
                   source: target/PACKAGE.txt
                   destination: artifacts                   
              tasks: # ordered list of tasks to execute in job csharp
               - exec: # indicates type of task
                   working_directory: 
                   command: make
                   arguments:
                    - "clean"
               - exec: # indicates type of task
                   working_directory: 
                   command: make
                   arguments:
                    - "archive"
               - exec: # indicates type of task
                   working_directory: 
                   command: make
                   arguments:
                    - "publish"
               - exec: # indicates type of task
                   working_directory: target
                   command: /bin/bash
                   arguments:
                    - "-c
                        aws --region ${REGION} --profile ${PROFILE} s3 cp ${APPLICATION}-*.tar.gz s3://${ARCHIVE_BUCKET}/"
               - exec: # indicates type of task
                   working_directory: target
                   command: /bin/bash
                   arguments:
                    - "-c
                      aws --region ${REGION} --profile ${PROFILE} s3 cp RELEASE.txt s3://${ARCHIVE_BUCKET}/"
               - exec: # indicates type of task
                   working_directory: target
                   command: /bin/bash
                   arguments:
                    - "-c
                      aws --region ${REGION} --profile ${PROFILE} s3 cp PACKAGE.txt s3://${ARCHIVE_BUCKET}/"                                                          
               - exec: # indicates type of task
                   working_directory: target
                   command: /bin/bash
                   arguments:
                    - "-c
                      aws --region ${REGION} --profile ${PROFILE} s3 cp ${APPLICATION}-*.tar.gz s3://test-tabcorp-beta-archive/"
               - exec: # indicates type of task
                   working_directory: target
                   command: /bin/bash
                   arguments:
                    - "-c
                      aws --region ${REGION} --profile ${PROFILE} s3 cp RELEASE.txt s3://test-tabcorp-beta-archive/" 